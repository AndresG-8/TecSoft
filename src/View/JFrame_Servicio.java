/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package View;

import Reports.rep_servicio;
import Task.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Gomez
 */
public final class JFrame_Servicio extends javax.swing.JFrame {
    Conexion con;
    DefaultTableModel modelo;
    //Reportes rep;
    double cobro;
    int contador = 0;//se usa para cuando el usuario le da mas de una vez en guardar. no lo deja
    /**
     * Creates new form JFrame_Servicio
     */
    public JFrame_Servicio() {
        initComponents();
        cerrarControlado();
    }
    
    public JFrame_Servicio(Conexion con) {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Servicio");
        cerrarControlado();
        jMIGuardar.setEnabled(false);
        jButton2.setEnabled(false);
        btnSel.setVisible(false);//no visualiza el boton de seleccionar
        btnDelCot.setVisible(false);
        this.con = con;
        formato_ancho();
    }
    private String usuario;
    public JFrame_Servicio(Conexion con, String usuario) {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Servicio");
        cerrarControlado();
        jMIGuardar.setEnabled(false);
        jButton2.setEnabled(false);
        btnSel.setVisible(false);//no visualiza el boton de seleccionar
        btnDelCot.setVisible(false);
        this.con = con;
        this.usuario = usuario;
        txtResp.setText(usuario);
        formato_ancho();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        txtCobro = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtTipo = new javax.swing.JTextField();
        txtNom_Ser = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtPlaca = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        txtCod_Ser = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        btnMod = new javax.swing.JButton();
        txtTotal = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnEliminar = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtResp = new javax.swing.JTextField();
        btnSel = new javax.swing.JButton();
        btnDelCot = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        lblImp = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMIGuardar = new javax.swing.JMenuItem();
        jMICotizacion = new javax.swing.JMenuItem();
        jMIImprimir = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMISalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel3.setText("Cobro");

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jLabel4.setText("Nombre Servicio");

        txtCobro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCobroKeyTyped(evt);
            }
        });

        jLabel5.setText("Tipo");

        jLabel2.setText("Servicio Tecnico");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del Cliente"));

        jLabel6.setText("Nombre");

        jLabel7.setText("Identificacion");

        jLabel1.setText("NIT... ");

        jLabel9.setText("razon social de la empresa... No hay");

        jLabel10.setText("Apellido");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))
                .addGap(60, 60, 60))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 2, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel9))
                .addGap(6, 6, 6))
        );

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/magnifier_1.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtPlaca.setText("placa");
        txtPlaca.setToolTipText("");
        txtPlaca.setEnabled(false);

        jPanel1.setToolTipText("Si no se selecciona nada, por defecto guarda Servicio");

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Servicio");
        jRadioButton1.setToolTipText("Si no se selecciona nada, por defecto guarda Servicio");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Cotizacion");
        jRadioButton2.setToolTipText("Si no se selecciona nada, por defecto guarda Servicio");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtCod_Ser.setText("Cod_Ser");
        txtCod_Ser.setEnabled(false);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/magnifier_1.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/add.png"))); // NOI18N
        jButton3.setText("Agregar Item");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnMod.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pencil.png"))); // NOI18N
        btnMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModActionPerformed(evt);
            }
        });

        txtTotal.setEditable(false);

        jLabel8.setText("TOTAL");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo Servicio", "Nombre", "Tipo", "Descripción", "SubTotal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable1);

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/delete.png"))); // NOI18N
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jLabel12.setText("Responsable:");

        txtResp.setEditable(false);

        btnSel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/accept.png"))); // NOI18N
        btnSel.setText("Seleccionar");
        btnSel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelActionPerformed(evt);
            }
        });

        btnDelCot.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/delete.png"))); // NOI18N
        btnDelCot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelCotActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtCod_Ser, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtResp, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtNom_Ser, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtCobro, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel2))
                                .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnMod, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2)
                            .addComponent(btnDelCot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCod_Ser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2)
                            .addComponent(jButton1)
                            .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtResp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(8, 8, 8)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCobro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(txtNom_Ser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(11, 11, 11)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelCot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Logo2Reducido2.png"))); // NOI18N

        lblImp.setForeground(new java.awt.Color(255, 0, 51));

        jMenu1.setText("Archivo");

        jMIGuardar.setText("Guardar y cobrar");
        jMIGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIGuardarActionPerformed(evt);
            }
        });
        jMenu1.add(jMIGuardar);

        jMICotizacion.setText("Cotizaciones");
        jMICotizacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMICotizacionActionPerformed(evt);
            }
        });
        jMenu1.add(jMICotizacion);

        jMIImprimir.setText("Imprimir");
        jMIImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIImprimirActionPerformed(evt);
            }
        });
        jMenu1.add(jMIImprimir);

        jMenuItem1.setText("Ver servicios ant...");
        jMenuItem1.setToolTipText("No puede hacerle ningun cambio");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMISalir.setText("Salir");
        jMISalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMISalirActionPerformed(evt);
            }
        });
        jMenu1.add(jMISalir);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(lblImp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblImp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //buscar servicio
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JDialog_Bus_Ser bus_ser  = new JDialog_Bus_Ser(this, true, con);
        bus_ser.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed
    //buscar cliente
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        lblImp.setText("");
        JDialog_Bus_Cli bus_cli = new JDialog_Bus_Cli(this, true, con);
        bus_cli.setVisible(true);
        //que si esta cargado el txt o algo asi que lo habilite, si no NOOO
        if(!"Nombre".equals(jLabel6.getText())){
            jButton2.setEnabled(true);
           // jButton1.setEnabled(false);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    //modificar
    private void btnModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModActionPerformed
        modelo = (DefaultTableModel) jTable1.getModel();
        int fil_sel = jTable1.getSelectedRow();
        if(fil_sel == -1){
            JOptionPane.showMessageDialog(this, "Seleccione de la lista un servicio para modificarlo");
        }else{
            txtCod_Ser.setText(jTable1.getValueAt(fil_sel, 0).toString());
            txtNom_Ser.setText(jTable1.getValueAt(fil_sel, 1).toString());
            txtTipo.setText(jTable1.getValueAt(fil_sel, 2).toString());
            jTextArea2.setText(jTable1.getValueAt(fil_sel, 3).toString());
            txtCobro.setText(jTable1.getValueAt(fil_sel, 4).toString());
            
            double restar = Double.parseDouble(jTable1.getValueAt(fil_sel, 4).toString());
            modelo.removeRow(fil_sel);
            cobro = cobro - restar;
            txtTotal.setText(""+cobro);
                
        }
    }//GEN-LAST:event_btnModActionPerformed
    //eliminar
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        modelo = (DefaultTableModel) jTable1.getModel();
        int fil_sel = jTable1.getSelectedRow();
        if(fil_sel < 0){
            JOptionPane.showMessageDialog(this, "Debe seleccionar un elemento");
        }else{
            int confirmar = JOptionPane.showConfirmDialog(null, "¿Esta seguro que desea eliminar el registro?");
            if(JOptionPane.OK_OPTION == confirmar){
                double restar = Double.parseDouble(jTable1.getValueAt(fil_sel, 4).toString());
                modelo.removeRow(fil_sel);
                cobro = cobro - restar;
                txtTotal.setText(""+cobro);
                
                JOptionPane.showMessageDialog(this, "Registro elimiando");
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed
     //AGREGAR ITEM
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
//si el cobro no esta ingresado que le pregunte o agrege uno por defecto 
        if(!"".equals(txtPlaca.getText()) && !"".equals(txtCod_Ser.getText()) && !"".equals(txtNom_Ser.getText()) && !"".equals(txtTipo.getText())
                && !"".equals(jTextArea2.getText()) && !"".equals(txtCobro.getText())){         
            modelo = (DefaultTableModel) jTable1.getModel();
            Object[] columna = new Object[5];
            columna[0] = txtCod_Ser.getText();
            columna[1] = txtNom_Ser.getText();
            columna[2] = txtTipo.getText();
            columna[3] = jTextArea2.getText();
            columna[4] = txtCobro.getText();
            cobro += Double.parseDouble(txtCobro.getText());
            txtTotal.setText(""+cobro);
            modelo.addRow(columna);
            jTable1.setModel(modelo);
            limpiar();
            jMIGuardar.setEnabled(true);
        }else{
            JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios");
        }   
    }//GEN-LAST:event_jButton3ActionPerformed
    //key typed del cobro
    private void txtCobroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCobroKeyTyped
        String numeros = "1234567890";
        char caracter = evt.getKeyChar();
        String c = "" + caracter;
        if(!numeros.contains(c)){
            evt.consume();  
        }
        int numero = (int)(caracter);
        if(numero == 10){
           jButton3.requestFocus();
        }
    }//GEN-LAST:event_txtCobroKeyTyped
    //Jmenuiten imprimir
    private void jMIImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIImprimirActionPerformed
        if(!"Identificacion".equals(jLabel7.getText()) && !"".equals(jLabel7.getText())){
            if(JOptionPane.showConfirmDialog(this, "¿Desea generar reporte?", "confirmar reporte", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0){
                Reportes rep = new Reportes();
                rep.setCobro(Double.parseDouble(txtTotal.getText()));
                rep.setId(Double.parseDouble(jLabel7.getText()));
                List lista = new ArrayList();
                for(int i = 0; i < jTable1.getRowCount(); i++){
                    rep_servicio rep_ser = new rep_servicio(jTable1.getValueAt(i, 0).toString(), jTable1.getValueAt(i, 1).toString(),
                    jTable1.getValueAt(i, 2).toString(), jTable1.getValueAt(i, 3).toString(), jTable1.getValueAt(i, 4).toString());
                    lista.add(rep_ser);
                }
                if(con.cargar_servicio(rep, lista) == false){
                    JOptionPane.showMessageDialog(null, "No se pudo cargar el reporte especificado");
                }
            } 
        }else{
            JOptionPane.showMessageDialog(this, "Debe haber un cliente con servicios para poder imprimir");
        }
    }//GEN-LAST:event_jMIImprimirActionPerformed
    //jmenuitem guardar y cobrar
    private void jMIGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIGuardarActionPerformed
         if(!"".equals(txtResp.getText())){
            if(contador == 0){
                int confirmar = JOptionPane.showConfirmDialog(null, "¡Una vez guardado no se podra volver a guardar!");
                if(JOptionPane.OK_OPTION == confirmar){
                    guardar();
                }
            }else{
                JOptionPane.showMessageDialog(this, "Ya se ha guardado esta lista. No puede Agregar mas");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Se requiere el Nombre del Tecnico que atiende");
        }
        // un contador que no permita salir o cerrar la  pagina si no se han guardado los datos
        
    }//GEN-LAST:event_jMIGuardarActionPerformed
    //jmenuiten cotizacion
    private void jMICotizacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMICotizacionActionPerformed
        modelo = (DefaultTableModel) jTable1.getModel();
        con.cargar(" SELECT * FROM servicio WHERE tipo_ser = 'cotizacion' ", modelo);
        btnSel.setVisible(true);
        btnDelCot.setText( "Eliminar cotización" );
        btnDelCot.setVisible( true );
        jRadioButton2.setSelected( true );
    }//GEN-LAST:event_jMICotizacionActionPerformed
    //salida
    private void jMISalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMISalirActionPerformed
        confirmarSalida();
    }//GEN-LAST:event_jMISalirActionPerformed
    //selecciona el item y carga los detalles de ese servicio
    private void btnSelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelActionPerformed
        modelo = (DefaultTableModel) jTable1.getModel();
        int fil_sel = jTable1.getSelectedRow();
        if(fil_sel == -1){
            JOptionPane.showMessageDialog(this, "Seleccione de la lista un item para ver sus detalles");
        }else{
            int cod_reg;
            cod_reg = Integer.parseInt( jTable1.getValueAt(fil_sel, 0).toString() );
            //cojo la placa del cliente y el responsable
            txtPlaca.setText( jTable1.getValueAt(fil_sel, 2).toString() );
            txtResp.setText( jTable1.getValueAt(fil_sel, 4).toString() );

            modelo = (DefaultTableModel) jTable1.getModel();
            con.cargar(" SELECT detalle_ser.cod_ser, lista_servicio.nombre_ser, lista_servicio.tipo_ser, detalle_ser.procedimiento, detalle_ser.cobro\n" +
                    "FROM detalle_ser \n" +
                    "INNER JOIN lista_servicio ON detalle_ser.cod_ser = lista_servicio.cod_ser\n" +
                    "WHERE detalle_ser.cod_reg = "+ cod_reg +" ", modelo);
            formato_ancho();

            //recorrer con un for para sacar el cobro
            int rowcount = jTable1.getRowCount();
            //double cobror = 0.0;
            cobro = 0;
            for(int i = 0; i < rowcount; i++){
               cobro += Double.parseDouble( jTable1.getValueAt(i, 4).toString() );
            }
            txtTotal.setText( ""+cobro );
            btnSel.setVisible(false);
            btnDelCot.setVisible(false);
            jMIGuardar.setEnabled(true);
            lblImp.setText("IMPORTANTE: debe buscar el cliente con la placa especificada");
        }
    }//GEN-LAST:event_btnSelActionPerformed
    //servicios anteriores
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        modelo = (DefaultTableModel) jTable1.getModel();
        con.cargar(" SELECT * FROM servicio WHERE tipo_ser = 'servicio' ", modelo);
        btnDelCot.setVisible( true );
        btnDelCot.setText( "Eliminar servicio" );
        btnSel.setVisible( true );
        jRadioButton1.setSelected( true );
    }//GEN-LAST:event_jMenuItem1ActionPerformed
    //ELIMINAR SERVICIO U COTIZACION
    private void btnDelCotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelCotActionPerformed
        if( btnDelCot.getText() == "Eliminar cotización" ){
            modelo = (DefaultTableModel) jTable1.getModel();
            int fil_sel = jTable1.getSelectedRow();
            if(fil_sel == -1){
                JOptionPane.showMessageDialog(this, "Seleccione de la lista una cotizacion para eliminarla");
            }else{
                if(JOptionPane.showConfirmDialog(this, "¿Esta seguro que desea eliminar esta cotización?", "Eliminar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0){
                    int cod_reg;
                    cod_reg = Integer.parseInt( jTable1.getValueAt(fil_sel, 0).toString() );
                    servicio serv = new servicio();
                    serv.setCod_reg( cod_reg );
                    if(con.eliminar_servicio( serv )){
                        JOptionPane.showMessageDialog(this, "Cotización eliminada con exito");
                        con.cargar(" SELECT * FROM servicio WHERE tipo_ser = 'cotizacion' ", modelo);
                    }
                }
            } 
        }
        if( btnDelCot.getText() == "Eliminar servicio" ){
            modelo = (DefaultTableModel) jTable1.getModel();
            int fil_sel = jTable1.getSelectedRow();
            if(fil_sel == -1){
                JOptionPane.showMessageDialog(this, "Seleccione de la lista un servicio para eliminarlo");
            }else{
                if(JOptionPane.showConfirmDialog(this, "¿Esta seguro que desea eliminar este servicio?", "Eliminar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0){
                    int cod_reg;
                    cod_reg = Integer.parseInt( jTable1.getValueAt(fil_sel, 0).toString() );
                    servicio serv = new servicio();
                    serv.setCod_reg( cod_reg );
                    if(con.eliminar_servicio( serv )){
                        JOptionPane.showMessageDialog(this, "Servicio eliminado con exito");
                        con.cargar(" SELECT * FROM servicio WHERE tipo_ser = 'servicio' ", modelo);
                    }
                }
            } 
        }
    }//GEN-LAST:event_btnDelCotActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame_Servicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new JFrame_Servicio().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelCot;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnMod;
    private javax.swing.JButton btnSel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    public static javax.swing.JLabel jLabel1;
    public static javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    public static javax.swing.JLabel jLabel6;
    public static javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    public static javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMICotizacion;
    private javax.swing.JMenuItem jMIGuardar;
    private javax.swing.JMenuItem jMIImprimir;
    private javax.swing.JMenuItem jMISalir;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    public static javax.swing.JTextArea jTextArea2;
    private javax.swing.JLabel lblImp;
    private javax.swing.JTextField txtCobro;
    public static javax.swing.JTextField txtCod_Ser;
    public static javax.swing.JTextField txtNom_Ser;
    public static javax.swing.JTextField txtPlaca;
    private javax.swing.JTextField txtResp;
    public static javax.swing.JTextField txtTipo;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables

    public void cerrarControlado(){
        try {
            this.setDefaultCloseOperation(JFrame_Servicio.DO_NOTHING_ON_CLOSE);
            addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosing(WindowEvent evt){
                    confirmarSalida();
                }
            });
            //
        } catch (Exception e) {
            e.getStackTrace();
        }
    }
    
    public void confirmarSalida(){
        if(contador >= 1){
            if(JOptionPane.showConfirmDialog(this, "¿Esta seguro que desea salir?", "salir", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0){
                this.dispose();
            }
        }else{
            if(JOptionPane.showConfirmDialog(this, "¿Esta seguro que desea salir SIN GUARDAR los cambios?", "salir sin guardar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0){
                this.dispose();
            }
        }
    }

    private void limpiar() {
        //Se borran los que se agregaron a la tabla
        txtCod_Ser.setText("");
        txtNom_Ser.setText("");
        txtTipo.setText("");
        jTextArea2.setText("");
        txtCobro.setText("");
    }

    private void guardar() {
        int ultimo;
        String tip = "Servicio";//se pone servicio por default
        if(jRadioButton1.isSelected()==true){
            tip = jRadioButton1.getText();
        }
        if(jRadioButton2.isSelected()==true){
            tip = jRadioButton2.getText();
        }
        servicio ser = new servicio();//son el identity, la fecha por default, la placa y el tipo(ser o cot)
        ser.setPlaca(txtPlaca.getText());
        ser.setTipo_ser(tip);
        ser.setResp(txtResp.getText());
        if(con.guardar_servicio(ser)){
//una vez que se guarda el servicio. se debe agregar la fidelizacion del cliente
                int id;//se recuperan el id y el cod_reg, luego se procesan para verificar si existe o no en la BD
                id = Integer.parseInt(jLabel7.getText());
                if(tip == "Servicio"){
                     fidelizacion(id);
                }
            ultimo = con.ultimo_registro(ser);
            if(ultimo != 0){
                
                //este trozo de codigo es para guardar la premiacion
                modelo = (DefaultTableModel) jTable1.getModel();
                int rowcount = jTable1.getRowCount();
                for(int i = 0; i < rowcount; i++){
                    detalle_servicio det = new detalle_servicio();
                    det.setCod_reg(ultimo);
                    det.setCod_ser(Integer.parseInt(jTable1.getValueAt(i, 0).toString()));
                    int cod = det.getCod_ser();
                    String plk = ser.getPlaca();
                    if(tip == "Servicio"){
                        premiacion(cod, plk);
                    }
                    //se debe coger este codigo y verificar si existe en la tabla premiacion con la placa x                 
                    det.setProcedimiento(jTable1.getValueAt(i, 3).toString());
                    det.setCobro(Double.parseDouble(jTable1.getValueAt(i, 4).toString()));
                    if(con.guardar_det_ser(det) == false){
                        JOptionPane.showMessageDialog(this, "No se pudo guardar el detalle de servicio número " + i);
                    }
                }
            }
            contador += 1;
        }else{
            JOptionPane.showMessageDialog(this, "No se pudo guardar el Servicio");
        }
    }

    private void premiacion(int cod, String plk) {
        //esto solo ejecuta una llamada al procedimiento almacenado, no altera el funcionamiento
        //del programa. esta llamada dara un resultado, si el cant_veces esta vacio, se debe crear un
        //campo nuevo, el cual contendra el cod_premio(identity) la placa, el cod_ser, y la cant_veces

        premiacion pre = new premiacion();
        pre.setPlaca(plk);
        pre.setCod_ser(cod);
        if(con.hay_premio(pre) == false){
            JOptionPane.showMessageDialog(null, "No se pudo completar la premiación");
        }
    }
     
    private void fidelizacion(int id) {
        fidelizacion fid = new fidelizacion();
        fid.setId(id);
        if(con.hay_fid(fid) == false){
            JOptionPane.showMessageDialog(null, "No se pudo completar la fidelización");
        }
    }
   
    
    private void formato_ancho(){
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(71);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(380);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(70);
    }
    
}

