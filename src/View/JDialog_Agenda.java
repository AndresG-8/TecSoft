/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package View;

import Task.*;
import java.awt.print.PrinterException;
import java.text.MessageFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Gomez
 */
public class JDialog_Agenda extends javax.swing.JDialog {
    DefaultTableModel modelo;
    Conexion con;
    /**
     * Creates new form JDialog_Agenda
     * @param parent
     * @param modal
     */
    public JDialog_Agenda(javax.swing.JFrame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public JDialog_Agenda(javax.swing.JFrame parent, boolean modal, Conexion con) {
        super(parent, modal);
        initComponents(); 
        setTitle("Agenda");
        setResizable(false);
        setLocationRelativeTo(null);
        this.con = con;
        modelo = (DefaultTableModel) jTable1.getModel();
        this.con.cargar("SELECT * FROM Agenda", modelo);
        formato_ancho();
    }
    
       
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtDesc = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jfHora = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMISalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Nombre:");

        jLabel2.setText("Descripci√≥n:");

        jLabel5.setText("Cliente:");

        txtCliente.setEnabled(false);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/magnifier_1.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Fecha Entrega:");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/accept.png"))); // NOI18N
        jButton2.setText("Guardar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pencil.png"))); // NOI18N
        jButton3.setText("Modificar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/delete.png"))); // NOI18N
        jButton4.setText("Eliminar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel6.setText("Hora:");

        try {
            jfHora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel7.setText("HH:MM:SS");

        jDateChooser1.setDateFormatString("yyyy-M-dd");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jfHora, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtDesc)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addGap(139, 139, 139))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel1)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel6)
                        .addComponent(jfHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Logo2Reducido2.png"))); // NOI18N

        jMenu1.setText("Archivo");

        jMenuItem1.setText("Citas del D√≠a");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Citas de Ma√±ana");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Imprimir");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMISalir.setText("Salir");
        jMISalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMISalirActionPerformed(evt);
            }
        });
        jMenu1.add(jMISalir);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JDialog_Bus_Cli bus_cli = new JDialog_Bus_Cli(this, true, con);
        bus_cli.setVisible(true);//sobrecargue el metodo con un constructor para que admita un dialog de parent
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // se requieren todos los datos
         //si el id y el nombre no estan, que no ejecute el codigo
        if(!"".equals(txtNombre.getText()) && !"".equals(txtCliente.getText())){
            guardar();
            formato_ancho();
        }else{
            JOptionPane.showMessageDialog(this, "Se requiere minimo el Nombre y la Identificaci√≥n");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // modificar
        String texto = jButton3.getText();
        switch(texto){
            case "Modificar":
                modelo = (DefaultTableModel) jTable1.getModel();
                int fil_sel = jTable1.getSelectedRow();
                if(fil_sel < 0){
                    JOptionPane.showMessageDialog(this, "Debe seleccionar un elemento");
                }else{
                    jLabel3.setText("Codigo:");
                    
                    jLabel8.setText(jTable1.getValueAt(fil_sel, 0).toString());
                    txtNombre.setText(jTable1.getValueAt(fil_sel, 1).toString());
                    txtDesc.setText(jTable1.getValueAt(fil_sel, 2).toString());
                    //la tres es la fecha inicial, por eos no se carga
                    String fecha_c = jTable1.getValueAt(fil_sel, 4).toString();
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-M-dd");
                    Date fecha = null;
                    try {
                        fecha = sdf.parse(fecha_c);
                    } catch (ParseException e) {
                        JOptionPane.showMessageDialog(null, "Error convertiendo la fecha\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE );
                    }
                    jDateChooser1.setDate(fecha);
                    jfHora.setText(jTable1.getValueAt(fil_sel, 5).toString());
                    txtCliente.setText(jTable1.getValueAt(fil_sel, 6).toString());
                    
                    jButton3.setText("Guardar");
                    jButton4.setText("Cancelar");
                    jButton2.setEnabled(false);
                    //modelo.removeRow(fil_sel);//en ves de removerla, que haga 
                }
            break;
            case "Guardar":
                if(!"".equals(txtNombre.getText()) && !"".equals(txtCliente.getText())){
                    if(con.getCon() != null){
                        if(modificar_lista()){
                            this.con.cargar("SELECT * FROM Agenda", modelo);
                            formato_ancho();
                            jButton3.setText("Modificar");
                            jButton4.setText("Eliminar");
                            jButton2.setEnabled(true);
                        }
                    }else{
                        JOptionPane.showMessageDialog(this, "La conexi√≥n esta cerrada");
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "¬°Se requiere minimo el nombre y la Identificaci√≥n!");
                }
            break;
        }
                 
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String el = jButton4.getText();
        switch(el){
            case "Eliminar":
                modelo = (DefaultTableModel) jTable1.getModel();
                int fil_sel = jTable1.getSelectedRow();
                if(fil_sel < 0){
                    JOptionPane.showMessageDialog(this, "Debe seleccionar un elemento");
                }else{
                    if(JOptionPane.showConfirmDialog(this, "¬øEsta seguro que desea eliminar el registro?", 
                        "Eliminar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0){
                        if(con.getCon() != null){
                            int cod = Integer.parseInt((jTable1.getValueAt(fil_sel, 0).toString()));
                            if(eliminar_cita(cod)){
                                JOptionPane.showMessageDialog(this, "Registro eliminado con exito");
                                this.con.cargar("SELECT * FROM Agenda", modelo);
                                formato_ancho();
                            }
                            }else{
                                JOptionPane.showMessageDialog(this, "La conexi√≥n esta cerrada");
                        }
                    }
                }
            break;
            case "Cancelar":
                limpiar();
                jLabel3.setText("");
                jLabel8.setText("");
                jButton3.setText("Modificar");
                jButton4.setText("Eliminar");
                jButton2.setEnabled(true);
            break;
        }
    }//GEN-LAST:event_jButton4ActionPerformed
    //citas del dia siguiente
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        String texto = jMenuItem1.getText();
        switch(texto){
            case "Citas del D√≠a":
                modelo = (DefaultTableModel) jTable1.getModel();//seleccionar todo?select nombre, descripcion, fecha_inicial, fecha_entrega, hora_entrega FROM agenda where fecha_entrega = CONVERT(DATE, GETDATE())
                if(this.con.cargar_alarm_tabla("SELECT * FROM agenda WHERE fecha_entrega = CONVERT(DATE, GETDATE())", modelo)){
                    formato_ancho();
                    jMenuItem1.setText("Hecho");
                }else{
                    this.con.cargar("SELECT * FROM Agenda", modelo);
                    formato_ancho();
                    JOptionPane.showMessageDialog(this, "NO tiene citas para el D√≠a de hoy");
                }
                //this.con.cargar("select nombre, descripcion, fecha_inicial, fecha_entrega, hora_entrega FROM agenda where fecha_entrega = CONVERT(DATE, GETDATE())", modelo);
                
                break;
            case "Hecho":
                modelo = (DefaultTableModel) jTable1.getModel();
                this.con.cargar("SELECT * FROM Agenda", modelo);
                formato_ancho();
                jMenuItem1.setText("Citas del D√≠a");
                break;
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    //CITAS PARA EL DIA SIGUIENTE
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        String texto = jMenuItem2.getText();
        switch(texto){
            case "Citas de Ma√±ana":
                modelo = (DefaultTableModel) jTable1.getModel();//seleccionar todo?select nombre, descripcion, fecha_inicial, fecha_entrega, hora_entrega FROM agenda where fecha_entrega = CONVERT(DATE, GETDATE())
                if(this.con.cargar_alarm_tabla("SELECT * FROM agenda WHERE fecha_entrega = CONVERT(DATE, GETDATE()+1)", modelo)){
                    formato_ancho();
                    jMenuItem2.setText("Hecho");
                }else{
                    this.con.cargar("SELECT * FROM Agenda", modelo);
                    formato_ancho();
                    JOptionPane.showMessageDialog(this, "NO tiene citas para el D√≠a de hoy");
                }
                //this.con.cargar("select nombre, descripcion, fecha_inicial, fecha_entrega, hora_entrega FROM agenda where fecha_entrega = CONVERT(DATE, GETDATE())", modelo);
                
                break;
            case "Hecho":
                modelo = (DefaultTableModel) jTable1.getModel();
                this.con.cargar("SELECT * FROM Agenda", modelo);
                formato_ancho();
                jMenuItem2.setText("Citas de Ma√±ana");
                break;
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed
    //SALIR
    private void jMISalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMISalirActionPerformed
        if( JOptionPane.showConfirmDialog(this, "¬øEsta seguro que desea salir?", "salir", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0 ){
            this.dispose();
       }
    }//GEN-LAST:event_jMISalirActionPerformed
    // IMPRIMIR
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        try {
            MessageFormat headerFormat = new MessageFormat("AGENDA");
            MessageFormat footerFormat = new MessageFormat("- P√°gina {0} -");
            jTable1.print(JTable.PrintMode.FIT_WIDTH, headerFormat, footerFormat);
        } catch (PrinterException e) {
            JOptionPane.showMessageDialog(null, "Error imprimiendo\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE );
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialog_Agenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            JDialog_Agenda dialog = new JDialog_Agenda(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuItem jMISalir;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JFormattedTextField jfHora;
    public static javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtDesc;
    public static javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables

    public void guardar(){
        agenda cita = new agenda();
        cita.setNombre(txtNombre.getText());
        cita.setDescripcion(txtDesc.getText());
        try {
            java.util.Date fech = jDateChooser1.getDate();
            java.sql.Date sqlDate = new java.sql.Date(fech.getTime());
            cita.setFecha_entrega(sqlDate);
            
            
            //SimpleDateFormat fecha = new SimpleDateFormat("yyyy-M-dd");
            //en un util.date guardamos la fecha ya convertida tomada del jfTextField
            //java.util.Date fec = fecha.parse(jfFecha_E.getText());
            //luego se debe guardar en formato sql.date por ello se convierte y se guarda alli
            //java.sql.Date sqlDate = new java.sql.Date(fec.getTime());
            //luego se envia al date que es tipo sql
            //cita.setFecha_entrega(sqlDate);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error convertiendo la fecha\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE );
        }
        cita.setHora_entrega(jfHora.getText());
        cita.setPlaca(txtCliente.getText());
        if(con.guardar_cita(cita)){
            JOptionPane.showMessageDialog(this,"Datos Guardados");
            limpiar();
            this.con.cargar("SELECT * FROM Agenda", modelo);
        }else{
            JOptionPane.showMessageDialog(this,"Error al guardar datos");   
        } 
        
    }
    
    public void limpiar(){
        jDateChooser1.setDate(null);
        jfHora.setText("");
        txtCliente.setText("");
        txtDesc.setText("");
        txtNombre.setText("");
    }
    
    private boolean modificar_lista() {
        boolean rpta = false;
        agenda cita = new agenda();
        cita.setCod_cita(Integer.parseInt(jLabel8.getText()));
        cita.setNombre(txtNombre.getText());
        cita.setDescripcion(txtDesc.getText());
        try {
            java.util.Date fech = jDateChooser1.getDate();
            java.sql.Date sqlDate = new java.sql.Date(fech.getTime());
            cita.setFecha_entrega(sqlDate);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error convertiendo la fecha\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE );
        }
        cita.setHora_entrega(jfHora.getText());
        cita.setPlaca(txtCliente.getText());
        if(con.modificar_agenda(cita)){
                JOptionPane.showMessageDialog(this,"Datos modificados con exito");
                limpiar();
                jLabel3.setText("");
                jLabel8.setText("");
                rpta = true;
                //btnAgregar.setEnabled(false);
        }else{
                JOptionPane.showMessageDialog(this,"Error al modificar los datos");   
        } 
        return rpta;
    }
    
    public boolean eliminar_cita(int cod){
        boolean rpta = false;
        agenda cita = new agenda();
        cita.setCod_cita(cod);
        if(con.eliminar_agenda(cita)){
           rpta = true; 
        }else{
            JOptionPane.showMessageDialog(null, "Error eliminando la cita de la agenda");
        }
        
        return rpta;
    }
    
    private void formato_ancho(){
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(45);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(75);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(175);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(134);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(70);
        jTable1.getColumnModel().getColumn(6).setPreferredWidth(65);
    }
}
