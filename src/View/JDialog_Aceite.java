package View;

import Task.*;
import java.awt.print.PrinterException;
import java.io.FileInputStream;
import java.io.InputStream;
import java.text.MessageFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Properties;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Gomez
 */
public class JDialog_Aceite extends javax.swing.JDialog {
    DefaultTableModel modelo;
    Conexion con;
    
    //Carga los properties al iniciar el modulo
    private int op, re, me, ma;
    
    /**
     * Creates new form JDialog_Agenda
     * @param parent
     * @param modal
     */
    public JDialog_Aceite(javax.swing.JFrame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public JDialog_Aceite(javax.swing.JFrame parent, boolean modal, Conexion con) {
        super(parent, modal);
        initComponents(); 
        setTitle("Aceite");
        setResizable(false);
        setLocationRelativeTo(null);
        this.con = con;
        modelo = (DefaultTableModel) jTable1.getModel();
        this.con.cargar("SELECT * FROM Aceite", modelo);
        btnOpciones.setVisible(false);
        formato_ancho();
        rescatar_config();//SIEMPRE SE DEBE INICIAR, ASI CARGA LOS DATOS RELEVANTES
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jButton6 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtAceite = new javax.swing.JTextField();
        txtMarca = new javax.swing.JTextField();
        txtCant = new javax.swing.JTextField();
        txtKm_Actual = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        btnCalcular = new javax.swing.JButton();
        txtProx_Cam = new javax.swing.JTextField();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        txtKm_Dia = new javax.swing.JTextField();
        btnOpciones = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Nombre:");

        jLabel5.setText("Cliente:");

        txtCliente.setEnabled(false);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/magnifier_1.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/accept.png"))); // NOI18N
        jButton2.setText("Guardar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pencil.png"))); // NOI18N
        jButton3.setText("Modificar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/delete.png"))); // NOI18N
        jButton4.setText("Eliminar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/printer.png"))); // NOI18N
        jButton5.setText("Imprimir");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jDateChooser1.setDateFormatString("yyyy-M-dd");

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/book_open.png"))); // NOI18N
        jButton6.setText("Usuarios del Día");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel6.setText("Aceite:");

        jLabel7.setText("Marca:");

        jLabel9.setText("Cantidad:");

        jLabel10.setText("Ultimo Cambio:");

        jLabel11.setText("Kilometraje Actual:");

        jLabel12.setText("Estado:");

        jLabel14.setText("Kilometraje Proximo Cambio:");

        jLabel15.setText("Fecha Proximo Cambio:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Optimo", "Regular", "Medio", "Malo" }));

        btnCalcular.setText("CALCULAR");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        txtProx_Cam.setEnabled(false);

        jDateChooser2.setDateFormatString("yyyy-M-dd");

        jLabel4.setText("¿Cuantos kilometros recorre al día?:");

        btnOpciones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/book.png"))); // NOI18N
        btnOpciones.setText("Ver Datos");
        btnOpciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpcionesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(189, 189, 189)
                                .addComponent(jLabel1)
                                .addGap(16, 16, 16)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(txtAceite, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel11)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtKm_Actual, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(29, 29, 29)
                                        .addComponent(jLabel12))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtProx_Cam, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(48, 48, 48)
                                        .addComponent(jLabel15)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(58, 58, 58))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4)
                                .addGap(18, 18, 18)
                                .addComponent(jButton5)
                                .addGap(18, 18, 18)
                                .addComponent(jButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnOpciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtKm_Dia, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnCalcular))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMarca, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(txtAceite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1)))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(txtKm_Actual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)))
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtKm_Dia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCalcular))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(jLabel14)
                        .addComponent(txtProx_Cam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnOpciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Logo2Reducido2.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //BUSCA EL CLIENTE AL CUAL SE LE AGENDARA EL CAMBIO DE ACEITE
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JDialog_Bus_Cli bus_cli = new JDialog_Bus_Cli(this, true, con);
        bus_cli.setVisible(true);//sobrecargue el metodo con un constructor para que admita un dialog de parent
    }//GEN-LAST:event_jButton1ActionPerformed
    //GUARDA LOS DATOS INGRESADOS EN LOS TXT´S
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // se requieren todos los datos IMPLEMENTAR TODOS LOS CAMPOS
        if(!"".equals(txtNombre.getText()) && !"".equals(txtCliente.getText())){
            guardar();
        }else{
            JOptionPane.showMessageDialog(this, "Se requiere minimo el Nombre y la Identificación");
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    //MODIFICAR
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String texto = jButton3.getText();
        switch(texto){
            case "Modificar":
                modelo = (DefaultTableModel) jTable1.getModel();
                int fil_sel = jTable1.getSelectedRow();
                if(fil_sel < 0){
                    JOptionPane.showMessageDialog(this, "Debe seleccionar un elemento");
                }else{
                    jLabel3.setText("Codigo:");
                    jLabel8.setText(jTable1.getValueAt(fil_sel, 0).toString());
                    txtCliente.setText(jTable1.getValueAt(fil_sel, 9).toString());
                    txtNombre.setText(jTable1.getValueAt(fil_sel, 10).toString());
                    txtAceite.setText(jTable1.getValueAt(fil_sel, 1).toString());
                    txtMarca.setText(jTable1.getValueAt(fil_sel, 2).toString());
                    txtCant.setText(jTable1.getValueAt(fil_sel, 3).toString());
                    txtKm_Actual.setText(jTable1.getValueAt(fil_sel, 5).toString());
                    jComboBox1.setSelectedIndex( (Integer.parseInt(jTable1.getValueAt(fil_sel, 6).toString())) -1 );//ESTADOOO
                    txtProx_Cam.setText(jTable1.getValueAt(fil_sel, 7).toString());
                    
                    //lULTIMO CAMBIO
                    String fecha_c = jTable1.getValueAt(fil_sel, 4).toString();
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-M-dd");
                    Date fecha = null;
                    try {
                        fecha = sdf.parse(fecha_c);
                    } catch (ParseException e) {
                        JOptionPane.showMessageDialog(null, "Error convertiendo la fecha\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE );
                    }
                    jDateChooser1.setDate(fecha);
                    //PROXIMO CAMBIO
                    String fecha_pc = jTable1.getValueAt(fil_sel, 8).toString();
                    Date fecha_p = null;
                    try {
                        fecha_p = sdf.parse(fecha_pc);
                    } catch (ParseException e) {
                        JOptionPane.showMessageDialog(null, "Error convertiendo la fecha\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE );
                    }
                    jDateChooser2.setDate(fecha_p);
                    
                    jButton3.setText("Guardar");
                    jButton4.setText("Cancelar");
                    jButton2.setEnabled(false);
                    //modelo.removeRow(fil_sel);//en ves de removerla, que haga 
                }
            break;
            case "Guardar":
                if(!"".equals(txtNombre.getText()) && !"".equals(txtCliente.getText())){
                    if(con.getCon() != null){
                        if(modificar_lista()){
                            this.con.cargar("SELECT * FROM aceite", modelo);
                            formato_ancho();
                            jButton3.setText("Modificar");
                            jButton4.setText("Eliminar");
                            jButton2.setEnabled(true);
                        }
                    }else{
                        JOptionPane.showMessageDialog(this, "La conexión esta cerrada");
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "¡Se requiere minimo el nombre y la Identificación!");
                }
            break;
        }
                 
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String el = jButton4.getText();
        switch(el){
            case "Eliminar":
                modelo = (DefaultTableModel) jTable1.getModel();
                int fil_sel = jTable1.getSelectedRow();
                if(fil_sel < 0){
                    JOptionPane.showMessageDialog(this, "Debe seleccionar un elemento");
                }else{
                    if(JOptionPane.showConfirmDialog(this, "¿Esta seguro que desea eliminar el registro?", 
                        "Eliminar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0){
                        if(con.getCon() != null){
                            int cod = Integer.parseInt((jTable1.getValueAt(fil_sel, 0).toString()));
                            if(eliminar_aceite(cod)){
                                JOptionPane.showMessageDialog(this, "Registro eliminado con exito");
                                this.con.cargar("SELECT * FROM aceite", modelo);
                                formato_ancho();
                            }
                        }else{
                                JOptionPane.showMessageDialog(this, "La conexión esta cerrada");
                        }
                    }
                }
            break;
            case "Cancelar":
                limpiar();
                jLabel3.setText("");//
                jLabel8.setText("");
                jButton3.setText("Modificar");
                jButton4.setText("Eliminar");
                jButton2.setEnabled(true);
            break;
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       try {
            MessageFormat headerFormat = new MessageFormat("AGENDA");
            MessageFormat footerFormat = new MessageFormat("- Página {0} -");
            jTable1.print(JTable.PrintMode.FIT_WIDTH, headerFormat, footerFormat);
        } catch (PrinterException e) {
            JOptionPane.showMessageDialog(null, "Error imprimiendo\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE );
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String texto = jButton6.getText();
        switch(texto){
            case "Usuarios del Día":
               //SELECT * FROM aceite WHERE fecha_prox_cambio = CONVERT(DATE, GETDATE())
                modelo = (DefaultTableModel) jTable1.getModel();//seleccionar todo?select nombre, descripcion, fecha_inicial, fecha_entrega, hora_entrega FROM agenda where fecha_entrega = CONVERT(DATE, GETDATE())
                if(this.con.cargar_alarm_tabla("SELECT aceite.cod_aceite, aceite.aceite, aceite.marca, aceite.cantidad, aceite.ult_cambio, aceite.km_actual,\n" +
                        "aceite.estado, aceite.km_prox_cambio, aceite.fecha_prox_cambio, aceite.placa, aceite.nombre,\n" +
                        "cliente.id\n" +
                        "FROM aceite\n" +
                        "INNER JOIN moto ON aceite.placa = moto.placa\n" +
                        "INNER JOIN cliente ON moto.id = cliente.id\n" +
                        "WHERE fecha_prox_cambio = CONVERT(DATE, GETDATE())", modelo)){
                    btnOpciones.setVisible(true);
                    formato_ancho();
                    jButton6.setText("Hecho");
                }else{
                    this.con.cargar("SELECT * FROM aceite", modelo);
                    formato_ancho();
                    JOptionPane.showMessageDialog(this, "No hay cambios de aceite programados para hoy");
                }
                //this.con.cargar("select nombre, descripcion, fecha_inicial, fecha_entrega, hora_entrega FROM agenda where fecha_entrega = CONVERT(DATE, GETDATE())", modelo);
                
                break;
            case "Hecho":
                btnOpciones.setVisible(false);
                modelo = (DefaultTableModel) jTable1.getModel();
                this.con.cargar("SELECT * FROM aceite", modelo);
                formato_ancho();
                jButton6.setText("Usuarios del Día");
                break;
        }
        
        
    }//GEN-LAST:event_jButton6ActionPerformed
    //BONTON CALCULAR... que toma los valores para el proximo cambio
    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
        if( !"".equals(txtKm_Actual.getText()) && !"".equals(txtKm_Dia.getText()) ){
            int km_actual, km_diarios;
            km_actual = Integer.parseInt( txtKm_Actual.getText() );

            if(jComboBox1.getSelectedIndex() == 0){//si es optimo
                txtProx_Cam.setText(""+ (km_actual + op) );
            }else if(jComboBox1.getSelectedIndex() == 1){//si es regular
                txtProx_Cam.setText(""+  (km_actual + re) );
            }else if(jComboBox1.getSelectedIndex() == 2){//si es medio
                txtProx_Cam.setText(""+ (km_actual + me) );
            }else if(jComboBox1.getSelectedIndex() == 3){//si es malo
                txtProx_Cam.setText(""+ (km_actual + ma) );
            }
            //estos para la fecha del proximo cambio
            km_diarios = Integer.parseInt( txtKm_Dia.getText() );
            //OBJETO CALENDARIO QUE TOMA LA FECHA ACTUAL
            Date now = new Date(System.currentTimeMillis());
            Calendar cal = Calendar.getInstance();
            //SimpleDateFormat sdf = new SimpleDateFormat("yyyy-M-dd");
            //SE ESTABLECE LA FECHA ACTUAL, TOMADA CON DATE
            cal.setTime(now);
            //calculamos el tiempo que demorara para el siguiente cambio
            int dias;
            if(jComboBox1.getSelectedIndex() == 0){//si es optimo
                dias = op / km_diarios;
                //SE LE SUMAN LOS DIAS QUE QUERAMOS
                cal.add(Calendar.DAY_OF_YEAR, dias);
                //SE ESTABLECEN NUEVAMENTE EN EL DATE
                now = cal.getTime();
                //Y SE MUESTRA en el datechooser
                jDateChooser2.setDate( now );
              //  SELECT * FROM agenda WHERE fecha_entrega = CONVERT(DATE, GETDATE()+1)
            }else if(jComboBox1.getSelectedIndex() == 1){//si es regular
                dias = re / km_diarios;
                //SE LE SUMAN LOS DIAS QUE QUERAMOS
                cal.add(Calendar.DAY_OF_YEAR, dias);
                //SE ESTABLECEN NUEVAMENTE EN EL DATE
                now = cal.getTime();
                //Y SE MUESTRA en el datechooser
                jDateChooser2.setDate( now );
            }else if(jComboBox1.getSelectedIndex() == 2){//si es medio
                dias = me / km_diarios;
                //SE LE SUMAN LOS DIAS QUE QUERAMOS
                cal.add(Calendar.DAY_OF_YEAR, dias);
                //SE ESTABLECEN NUEVAMENTE EN EL DATE
                now = cal.getTime();
                //Y SE MUESTRA en el datechooser
                jDateChooser2.setDate( now );
            }else if(jComboBox1.getSelectedIndex() == 3){//si es malo
                dias = ma / km_diarios;
                //SE LE SUMAN LOS DIAS QUE QUERAMOS
                cal.add(Calendar.DAY_OF_YEAR, dias);
                //SE ESTABLECEN NUEVAMENTE EN EL DATE
                now = cal.getTime();
                //Y SE MUESTRA en el datechooser
                jDateChooser2.setDate( now );
            }
        }
    }//GEN-LAST:event_btnCalcularActionPerformed
//OPCIONES PARA LOS CLIENTES DEL DIA
    private void btnOpcionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpcionesActionPerformed
        // cuando vemos un cliente que tiene un cambio de aceite programado para el dia  actual
        //debemos mandarle una nota diciendole que es tiempo de que cambie el aceite de su
        //moto  o dacirle al usuario que lo llame
        int fil_sel = jTable1.getSelectedRow();
        if(fil_sel < 0){
            JOptionPane.showMessageDialog(this, "Debe seleccionar un cliente para acceder a mas opciones");
        }else{
            //se coge el id del cliente seleccionado y se le manda al dialog del cliente general para ver todos sus datos
            int ced = Integer.parseInt(jTable1.getValueAt(fil_sel, 11).toString());
            JDialog_Cliente_General cli_gral = new JDialog_Cliente_General(this, true, con, ced);
            cli_gral.setVisible(true);            
        }
    }//GEN-LAST:event_btnOpcionesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialog_Aceite.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            JDialog_Aceite dialog = new JDialog_Aceite(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnOpciones;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox jComboBox1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtAceite;
    private javax.swing.JTextField txtCant;
    public static javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtKm_Actual;
    private javax.swing.JTextField txtKm_Dia;
    private javax.swing.JTextField txtMarca;
    public static javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtProx_Cam;
    // End of variables declaration//GEN-END:variables

    
       /*
aceite VARCHAR(25) NOT NULL, 
marca VARCHAR(25) NULL, 
cantidad INT NOT NULL, 
ult_cambio DATE, 
km_actual INT NOT NULL, 
estado SMALLINT NOT NULL, 
km_prox_cambio INT NOT NULL,--se calcula en base a km_actual y estado
fecha_prox_cambio DATE NOT NULL, --se calcula en base a km_diarios
nombre VARCHAR(40) NOT NULL,
placa VARCHAR(15) NOT NULL,*/
            
    public void guardar(){
        aceite oil = new aceite();
        oil.setAceite( txtAceite.getText() );
        oil.setMarca( txtMarca.getText() );
        oil.setCantidad( Integer.parseInt(txtCant.getText()) );
        try {
            java.util.Date fech = jDateChooser1.getDate();
            java.sql.Date sqlDate = new java.sql.Date(fech.getTime());
            oil.setUlt_cambio(sqlDate);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error convertiendo la fecha\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE );
        }
        oil.setKm_actual( Integer.parseInt(txtKm_Actual.getText()) );
        oil.setEstado( jComboBox1.getSelectedIndex()+1 );//guarda el index del item, como empieza en cero, se le agrega uno
        oil.setKm_prox_cambio( Integer.parseInt(txtProx_Cam.getText()) );
       
        try {
            java.util.Date fech = jDateChooser2.getDate();
            java.sql.Date sqlDate = new java.sql.Date(fech.getTime());
            oil.setFecha_prox_cambio(sqlDate);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error convertiendo la fecha\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE );
        }  
        oil.setPlaca( txtCliente.getText() );
        oil.setNombre( txtNombre.getText() );
        if(con.guardar_aceite(oil)){
            JOptionPane.showMessageDialog(this,"Datos Guardados");
            limpiar();
            this.con.cargar("SELECT * FROM aceite", modelo);
        }else{
            JOptionPane.showMessageDialog(this,"Error al guardar datos");   
        } 
        
    }
    
    public void limpiar(){
        txtAceite.setText("");
        txtMarca.setText("");
        txtCant.setText("");
        jDateChooser1.setDate(null);
        txtKm_Actual.setText("");
        txtProx_Cam.setText("");
        jDateChooser2.setDate(null);
        txtCliente.setText("");
        txtNombre.setText("");
        txtKm_Dia.setText("");
    }
    
    private boolean modificar_lista() {
        boolean rpta = false;
        aceite oil = new aceite();
        oil.setAceite( txtAceite.getText() );
        oil.setMarca( txtMarca.getText() );
        oil.setCantidad( Integer.parseInt(txtCant.getText()) );
        try {
            java.util.Date fech = jDateChooser1.getDate();
            java.sql.Date sqlDate = new java.sql.Date(fech.getTime());
            oil.setUlt_cambio(sqlDate);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error convertiendo la fecha\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE );
        }
        oil.setKm_actual( Integer.parseInt(txtKm_Actual.getText()) );
        oil.setEstado( jComboBox1.getSelectedIndex()+1 );//guarda el index del item, como empieza en cero, se le agrega uno
        oil.setKm_prox_cambio( Integer.parseInt(txtProx_Cam.getText()) );
       
        try {
            java.util.Date fech = jDateChooser2.getDate();
            java.sql.Date sqlDate = new java.sql.Date(fech.getTime());
            oil.setFecha_prox_cambio(sqlDate);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error convertiendo la fecha\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE );
        }  
        oil.setPlaca( txtCliente.getText() );
        oil.setNombre( txtNombre.getText() );
        
        
        if(con.modificar_aceite(oil)){
            JOptionPane.showMessageDialog(this,"Datos modificados con exito");
            limpiar();
            jLabel3.setText("");
            jLabel8.setText("");
            rpta = true;
        }else{
                JOptionPane.showMessageDialog(this,"Error al modificar los datos");   
        } 
        return rpta;
    }
    
    public boolean eliminar_aceite(int cod){
        boolean rpta = false;
        aceite oil = new aceite();
        oil.setCod_aceite(cod);
        if(con.eliminar_aceite(oil)){
           rpta = true; 
        }else{
            JOptionPane.showMessageDialog(null, "Error eliminando los datos sobre el aceite");
        }
        
        return rpta;
    }
    
    private void formato_ancho(){
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(70);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(60);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(80);
        jTable1.getColumnModel().getColumn(6).setPreferredWidth(60);
        jTable1.getColumnModel().getColumn(7).setPreferredWidth(90);
        jTable1.getColumnModel().getColumn(8).setPreferredWidth(80);
        jTable1.getColumnModel().getColumn(9).setPreferredWidth(70);
        jTable1.getColumnModel().getColumn(10).setPreferredWidth(100);
    }
    
    private void rescatar_config() {
        Properties prop = new Properties();
        InputStream is;
        try {//carga el archivo en el inputStream con los datos que tenga
            is = new FileInputStream("TecSoft\\BackupsSQL\\configuraciones.properties");
            prop.load(is);
        } catch (Exception e) {
            e.printStackTrace();
        }
        op = Integer.parseInt( prop.getProperty( "configuracion.optimo" ) );
        re = Integer.parseInt( prop.getProperty( "configuracion.regular" ) );
        me = Integer.parseInt( prop.getProperty( "configuracion.medio" ) );
        ma = Integer.parseInt( prop.getProperty( "configuracion.malo" ) );
    }
}
